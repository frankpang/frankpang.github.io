<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="/assets/xslt/atom.xslt" ?>
<?xml-stylesheet type="text/css" href="/assets/css/atom.css" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>/</id>
	<title>Frank’s Site</title>
	<updated>2016-08-16T21:06:25-07:00</updated>

	<subtitle>This is my personal blog for discussing web, leadership, ba, design, and photography</subtitle>

	
		
		<author>
			
				<name>Frank</name>
			
			
			
				<uri>http://franctastik.github.io/</uri>
			
		</author>
	

	<link href="/atom.xml" rel="self" type="application/rss+xml" />
	<link href="/" rel="alternate" type="text/html" />

	<generator uri="http://jekyllrb.com" version="3.1.2">Jekyll</generator>

	
		<entry>
			<id>/webdev/css-progress-so-far/</id>
			<title>CSS Reading So Far</title>
			<link href="/webdev/css-progress-so-far/" rel="alternate" type="text/html" title="CSS Reading So Far" />
			<updated>2016-05-23T20:37:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>CSS: The Missing Manual is great book from O’Reilly Media. O’Reilly books have offered topnotch insight into various technical topics, and this one is no different.</summary>
			<content type="html" xml:base="/webdev/css-progress-so-far/">&lt;p&gt;David McFarland explains and illustrates very well the power of CSS. He starts off well in his introductory section, and paces the book very well.
The examples that he provides are practical, and his writing is clear. The exercises add to the interactivity and aids learning. He covers some of the things I learned just by playing with my website, such as creating stylesheets and selectors. Still, I’m glad to be reading his book, since David provides a deep insight into the power of CSS. This is apparent as he explains CSS inheritance, the point system for specificity, and how styles cascade.&lt;/p&gt;
</content>

			
				<category term="webdev" />
			
			
				<category term="CSS" />
			
				<category term="reading" />
			

			<published>2016-05-23T20:37:00-07:00</published>
		</entry>
	
		<entry>
			<id>/design/reading-list-for-designers/</id>
			<title>Reading List for Designers</title>
			<link href="/design/reading-list-for-designers/" rel="alternate" type="text/html" title="Reading List for Designers" />
			<updated>2016-05-18T20:30:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>I signed up to the InVision mailing list, hoping to win a free t-shirt! It’s great marketing how they’re using this, plus free tools and content to attract site visits. It draws visitors to the company’s brand and hopefully for InVision, their paid applications.</summary>
			<content type="html" xml:base="/design/reading-list-for-designers/">&lt;p&gt;I was hoping to get some interesting design tidbits out of their emails. One of the first emails they sent was a list of articles in the InVision blog. What caught my eye was a &lt;a href=&quot;http://blog.invisionapp.com/reading-list-for-designers/&quot; title=&quot;InVision Reading List&quot;&gt;reading list for designers&lt;/a&gt;. Again, that’s good marketing in action as InVision entices you with great free content.
I’m curious to learn more about design and how to make my site look better, so I looked at this list.&lt;/p&gt;

&lt;p&gt;By now I’m really thinking I’m a font nut as the first thing that caught my eye on the list is “Thinking with Type”. I’ve seen that being mentioned as a great read on fonts from a few sites, so I Google’d the book to see how much it would cost. As far as I can see, the &lt;a href=&quot;http://www.thinkingwithtype.com/&quot; title=&quot;Thinking with Type&quot;&gt;official site for the book&lt;/a&gt; has most, if not all, the content from the book for free. It’s a good read so far, with the author, Ellen Lupton, explaining the concepts well, without getting overly technical. She uses “Type Crimes” to illustrate the bad practices that should be avoided in typography, and her examples are sometimes amusing as well. Overall, this is a good read so far, and it looks to have a good coverage of the subject.&lt;/p&gt;

</content>

			
				<category term="design" />
			
			
				<category term="reading" />
			

			<published>2016-05-18T20:30:00-07:00</published>
		</entry>
	
		<entry>
			<id>/design/adobe-typekit-and-site-progress/</id>
			<title>Adobe Typekit and Site Progress</title>
			<link href="/design/adobe-typekit-and-site-progress/" rel="alternate" type="text/html" title="Adobe Typekit and Site Progress" />
			<updated>2016-05-12T15:05:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>Adobe Typekit is a great free option for a web font service for personal sites. The fonts that are available on the free account is a mix of good Open Source fonts such, and fonts from Adobe and other type foundries. </summary>
			<content type="html" xml:base="/design/adobe-typekit-and-site-progress/">&lt;p&gt;It’s a great way to try out their font service and expands the font choices for a website beyond the free Open Source fonts. There are some quality and interesting fonts available, such as Museo Sans and Europa.&lt;/p&gt;

&lt;p&gt;Browsing the fonts in Typekit is intuitive. You’re given a list of fonts and have a control panel to filter the font selections. With that, you can choose the fonts available to you by type - serif, sans-serif, script, and so on. Once you click on the icons representing the font sample, you get a sample page of the styles and weights for the font. With this, you’d get a good feel for how the font looks.&lt;/p&gt;

&lt;p&gt;That’s enough playing with fonts for now. I’d like to focus on tweaking the landing page, adding some more wording and content to my widgets, and cleaning up some UI oddities or inconsistencies.&lt;/p&gt;

&lt;p&gt;I maintain a short, informal to-do list for my website as it’s an easy way to track tasks. On that list, there are features that would be nice to have for the future, but those are at the bottom of the list. Things like UI glitches are higher priority due to the goal of having a polished (but not perfect) site.&lt;/p&gt;
</content>

			
				<category term="design" />
			
			
				<category term="fonts" />
			

			<published>2016-05-12T15:05:00-07:00</published>
		</entry>
	
		<entry>
			<id>/design/brick-fonts/</id>
			<title>Brick Font Service</title>
			<link href="/design/brick-fonts/" rel="alternate" type="text/html" title="Brick Font Service" />
			<updated>2016-05-07T11:52:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>I hesitated to use Brick at first, but after looking through their catalogue and seeing how easy it is to use their web font service, I switched to using Brick instead of Google Fonts.</summary>
			<content type="html" xml:base="/design/brick-fonts/">&lt;p&gt;In addition to the Google Fonts web service, there’s another web font service that serves up free fonts: &lt;a href=&quot;http://brick.im/fonts/&quot; title=&quot;Brick Fonts&quot;&gt;Brick Fonts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most of the fonts available on Brick are also available on Google Fonts, but Brick also provides other fonts that Google doesn’t have. For example, Aileron is a nice sans-serif font inspired by Helvetica. Aileron features 16 styles, so it’s quite a versatile font as well.&lt;/p&gt;

&lt;p&gt;They also have more styles of certain Google fonts, such as Muli and Montserrat. Whereas Google only offers a few weights or styles for those fonts, Brick offers 9 styles for Montserrat and 10 styles for Muli. So, Brick makes those fonts a lot more versatile. They’re quite nice looking fonts as well, so I’m happy with what Brick has done for them.&lt;/p&gt;

&lt;p&gt;In addition, Brick boasts better smoothing, fuller ligature set, and better kerning in the fonts they serve up.&lt;/p&gt;

&lt;p&gt;The fonts seem to load pretty quickly, and that’s probably helped by the CDN service they use to serve up the fonts.&lt;/p&gt;

&lt;p&gt;Best of all, it’s free to use. Kudos to Brick fonts!&lt;/p&gt;

</content>

			
				<category term="design" />
			
			
				<category term="fonts" />
			

			<published>2016-05-07T11:52:00-07:00</published>
		</entry>
	
		<entry>
			<id>/design/free-font-guide/</id>
			<title>Free Guide for Combining Typefaces</title>
			<link href="/design/free-font-guide/" rel="alternate" type="text/html" title="Free Guide for Combining Typefaces" />
			<updated>2016-05-04T22:26:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>The Pocket Guide to Combining Typefaces, once a paid eBook, is now free for download.</summary>
			<content type="html" xml:base="/design/free-font-guide/">&lt;p&gt;Tim Brown’s combining typefaces guide is now a free &lt;a href=&quot;http://blog.typekit.com/2016/04/29/combining-typefaces-free-guide-to-great-typography/&quot; title=&quot;Tim Brown&#39;s Font eBook&quot;&gt;eBook&lt;/a&gt;!
Originally published in 2013, it’s a beautifully laid out, handy guide on fonts, their roles in your page design, and how to combine the fonts. I’ve only skimmed through the 63 page guide so far, but it looks to be quite useful.&lt;/p&gt;

</content>

			
				<category term="design" />
			
			
				<category term="fonts" />
			

			<published>2016-05-04T22:26:00-07:00</published>
		</entry>
	
		<entry>
			<id>/webdev/nearing-launch/</id>
			<title>Getting ready for launch of website</title>
			<link href="/webdev/nearing-launch/" rel="alternate" type="text/html" title="Getting ready for launch of website" />
			<updated>2016-04-30T22:59:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>The launch of my website draws near.</summary>
			<content type="html" xml:base="/webdev/nearing-launch/">&lt;p&gt;I haven’t been reading up on CSS as much as I wanted to, as I’ve been busy with life and polishing up my site.&lt;/p&gt;

&lt;p&gt;Despite the writing of my articles for my blog in the last four months, I still haven’t published my blog to the internet yet. So far, I’ve been running the pages on my Jekyll server, testing the layout and editing articles. It’s not that I’m a perfectionist, it’s just that I want the site to look polished, even if it’s not the final design. I don’t want any glaring mistakes or UI inconsistencies. There are a few interface elements that I want to clean up so that it doesn’t look like something is missing from the site. I’m feeling more excited as my blog gets closer to being published!&lt;/p&gt;
</content>

			
				<category term="webdev" />
			
			

			<published>2016-04-30T22:59:00-07:00</published>
		</entry>
	
		<entry>
			<id>/webdev/reading-up-on-css/</id>
			<title>Reading up on CSS</title>
			<link href="/webdev/reading-up-on-css/" rel="alternate" type="text/html" title="Reading up on CSS" />
			<updated>2016-04-18T22:56:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>After researching cool tools, frameworks, and apps, I want to get back to learning the fundamentals of web development and learn more about CSS.</summary>
			<content type="html" xml:base="/webdev/reading-up-on-css/">&lt;p&gt;I’ve learned some CSS through customizing the phlow template, but I think it’s time to go back to the CSS: The Missing Manual book to get an overview of CSS. I’d like to understand the fundamentals of CSS and its capabilities. Even if I use a web page design app for my sites, at some point, some fine tuning or debugging may be needed, and that’s where a good grasp of the fundamentals will help.&lt;/p&gt;
</content>

			
				<category term="webdev" />
			
			
				<category term="CSS" />
			

			<published>2016-04-18T22:56:00-07:00</published>
		</entry>
	
		<entry>
			<id>/design/web-page-editors/</id>
			<title>Web Page Design Apps</title>
			<link href="/design/web-page-editors/" rel="alternate" type="text/html" title="Web Page Design Apps" />
			<updated>2016-04-07T22:59:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>There’s a wealth of web page building tools which features visual drag and drop interface. These tools can get a prototype web page up and running quickly.</summary>
			<content type="html" xml:base="/design/web-page-editors/">&lt;p&gt;As the site gets closer to a functioning blog, I started looking at ways to speed up page design and prototyping. I wanted a tool that features dragging and dropping of UI components to a web page, and generate HTML and CSS for the page. At the same time, I would like the app to produce some clean and readable code as well.&lt;/p&gt;

&lt;p&gt;There are a lot of choices in this category. One of the more popular tools is &lt;a href=&quot;https://webflow.com/&quot; title=&quot;Webflow&quot;&gt;Webflow&lt;/a&gt;. It’s an entirely web based tool which features a slick interface with some cool templates to get started with designing. Webflow can also show how the pages will appear on different screen sizes, which can provide a basic way of testing for different devices. It’s not a comprehensive way of testing multiple devices, but it gives an idea of how the pages will look.&lt;/p&gt;

&lt;p&gt;Signing up to Webflow is easy, and you can start with a free account to try out the design features. You’re limited to one project and no CSS export or advanced features. Still, the free account is enough to get the gist of the editor, which is quite clean and easy to use.&lt;/p&gt;

&lt;p&gt;Next, I looked at &lt;a href=&quot;http://pinegrow.com/&quot; title=&quot;Pinegrow&quot;&gt;Pinegrow&lt;/a&gt;. It’s a lesser known web editor, but it seems to have some great features. It can open a web page from your local drive, make changes, and save them. It also has support for frameworks such as Bootstrap and Foundation, allowing you to drag and drop components into the page. That would be one of the best features for me; I like to start with some ready made components to prototype faster. A built-in editor makes it easy to directly edit the code as well. There’s many more features, and it looks like an app that would allow me to quickly prototype pages.&lt;/p&gt;

&lt;p&gt;Pinegrow also offers a 30 day free trial, so that would be a good way to try out the features and see if it fits my needs.&lt;/p&gt;

&lt;p&gt;In the meantime, I want to get back to the fundamentals and understand the power of CSS and SASS before I dive too deep into the visual web editors.&lt;/p&gt;

</content>

			
				<category term="design" />
			
			
				<category term="tools" />
			
				<category term="Bootstrap" />
			
				<category term="Foundation" />
			

			<published>2016-04-07T22:59:00-07:00</published>
		</entry>
	
		<entry>
			<id>/webdev/jekyll-smartify/</id>
			<title>Jekyll Smartify</title>
			<link href="/webdev/jekyll-smartify/" rel="alternate" type="text/html" title="Jekyll Smartify" />
			<updated>2016-04-01T22:56:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>Sometimes there’s an easy solution to your problem right under your nose; you just have to look for it (or read the manual).</summary>
			<content type="html" xml:base="/webdev/jekyll-smartify/">&lt;p&gt;I was looking for ways to convert the quotes in my blog writeups to smart quotes and smart dashes. Sure, there’s keyboard shortcuts for proper quotation marks, but that’s not as fast as typing a single key. There is a useful Atom plugin that converts straight quotes to smart quotes as well. However, somewhere along the way, I might forget to do the conversion, and that’s where Jekyll’s enhancement to the Liquid templating engine comes in. The “smartify” filter converts straight quotes to smart quotes during page generation, so you can use straight quotes in the markdown page but they’ll get converted to proper quotation characters when Jekyll generates the pages.
It works well with body text but it doesn’t smartify front matter text. For example if you have straight quotes defined in the page title variable, the smartify filter won’t convert that.&lt;/p&gt;
</content>

			
				<category term="webdev" />
			
			
				<category term="Jekyll" />
			

			<published>2016-04-01T22:56:00-07:00</published>
		</entry>
	
		<entry>
			<id>/webdev/jekyll-tagging/</id>
			<title>Jekyll Tagging and Archives</title>
			<link href="/webdev/jekyll-tagging/" rel="alternate" type="text/html" title="Jekyll Tagging and Archives" />
			<updated>2016-03-26T22:52:00-07:00</updated>

			
				
				<author>
					
						<name>Frank</name>
					
					
					
						<uri>http://franctastik.github.io/</uri>
					
				</author>
			
			<summary>Automating the tag and category page generation took a bit more work than expected. During the troubleshooting I learned how Jekyll generates the site’s pages.</summary>
			<content type="html" xml:base="/webdev/jekyll-tagging/">&lt;p&gt;I’ve been struggling with Jekyll these past few days. I’m trying to get tag and category page generation working for my site. At first, I used the jekyll-tagging plugin. It works OK in automatically generate category pages. The only snag was that the plugin didn’t read all of the front matter variables during page generation. For example, I wanted to set a variable to turn off the masthead in the page layout using a variable set in the layout page’s front matter. For some reason, the plugin isn’t set up to read the variables.&lt;/p&gt;

&lt;p&gt;I thought that was OK to manually generate category pages since I only had two categories and I could manually add category pages. I later decided it’s best to automate the category page generation.&lt;/p&gt;

&lt;p&gt;I played around with the jekyll-archives plugin, which does the category pages but it also doesn’t read the front matter variable. It took a lot of debugging before I could get the Jekyll plugins to generate what I wanted. In that time, I learned some basic Ruby and had to read up in depth the flow of execution when Jekyll generates pages. While the debugging was somewhat frustrating, it was definitely an interesting learning experience on how flexible Jekyll is for allowing plugins for customized behavior.&lt;/p&gt;
</content>

			
				<category term="webdev" />
			
			
				<category term="Jekyll" />
			

			<published>2016-03-26T22:52:00-07:00</published>
		</entry>
	
</feed>